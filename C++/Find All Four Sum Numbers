class Solution{
    public:
    // arr[] : int input array of integers
    // k : the quadruple sum required
    vector<vector<int> > fourSum(vector<int> &arr, int k) {
        vector<vector<int> >ans;
        int n=arr.size();
        sort(arr.begin(),arr.end());
        for(int i=0;i<n-3;i++)
        {
            for(int j=i+1;j<n-2;j++)
            {
               
                int l=j+1;
                int r=n-1;
                while(l<r)
                {
                    int s=arr[i]+arr[j]+arr[l]+arr[r];
                if(s>k)
                r--;
                else if(s<k)
                l++;
                    
                else
                {
                    vector<int>quad(4,0);
                    quad[0] = arr[i];
                      quad[1] = arr[j];
                      quad[2] = arr[l];
                      quad[3] = arr[r];
                    ans.push_back(quad);
                    
                
                while(l<r && arr[l] == quad[2]) ++l;
                      
                      //processing front to skip duplicates
                while(l<r && arr[l] == quad[3]) --r;
                }
                }
                 while(j+1<n && arr[j+1] == arr[j]) ++j;
                
            }
             while(i+1<n && arr[i+1] == arr[i]) ++i;
        }
        return ans;
    }
};
